[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\unknow\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Azul Systems, Inc. Java 11.0.12)
[debug]       Load.loadUnit: plugins took 571.655572ms
[debug]       Load.loadUnit: defsScala took 1.304889ms
[debug] [Loading] Scanning directory C:\Users\unknow\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 42.044791 ms
[debug]           Load.resolveProject(global-plugins) took 83.247025ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\unknow\.sbt\1.0\plugins, plugins: List(<none>))) took 206.872388ms
[debug] [Loading] Done in C:\Users\unknow\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 295.754187ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.486126ms
[debug]     Load.loadUnit(file:/C:/Users/unknow/.sbt/1.0/plugins/, ...) took 896.7005ms
[debug]   Load.apply: load took 3018.344035ms
[debug]   Load.apply: resolveProjects took 26.718283ms
[debug]   Load.apply: finalTransforms took 491.796036ms
[debug]   Load.apply: config.delegates took 134.043488ms
[debug]   Load.apply: Def.make(settings)... took 1818.519545ms
[debug]   Load.apply: structureIndex took 326.779026ms
[debug]   Load.apply: mkStreams took 3.163087ms
[info] loading global plugins from C:\Users\unknow\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 21877.833016ms
[debug]           Load.loadUnit: plugins took 53.778535ms
[debug]           Load.loadUnit: defsScala took 0.006532ms
[debug] [Loading] Scanning directory C:\Users\unknow\Downloads\EXO2\project
[debug]             Load.loadUnit: mkEval took 13.882124ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\Downloads\EXO2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 9.622222 ms
[info] loading settings for project exo2-build from idea.sbt ...
[debug]               Load.resolveProject(exo2-build) took 69.717133ms
[debug]             Load.loadTransitive: finalizeProject(Project(id exo2-build, base: C:\Users\unknow\Downloads\EXO2\project, plugins: List(<none>))) took 82.132013ms
[debug] [Loading] Done in C:\Users\unknow\Downloads\EXO2\project, returning: (exo2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 9908.793473ms
[debug]           Load.loadUnit: cleanEvalClasses took 27.757251ms
[debug]         Load.loadUnit(file:/C:/Users/unknow/Downloads/EXO2/project/, ...) took 9991.914535ms
[debug]       Load.apply: load took 9995.213382ms
[debug]       Load.apply: resolveProjects took 0.158621ms
[debug]       Load.apply: finalTransforms took 83.639845ms
[debug]       Load.apply: config.delegates took 0.711461ms
[debug]       Load.apply: Def.make(settings)... took 326.717444ms
[debug]       Load.apply: structureIndex took 81.580106ms
[debug]       Load.apply: mkStreams took 0.005598ms
[info] loading project definition from C:\Users\unknow\Downloads\EXO2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 12006.275322ms
[debug]     Load.loadUnit: defsScala took 0.005599ms
[debug] [Loading] Scanning directory C:\Users\unknow\Downloads\EXO2
[debug]       Load.loadUnit: mkEval took 0.74925ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\unknow\Downloads\EXO2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 12.394354 ms
[info] loading settings for project exo2 from build.sbt ...
[debug]         Load.resolveProject(exo2) took 64.12808ms
[debug]       Load.loadTransitive: finalizeProject(Project(id exo2, base: C:\Users\unknow\Downloads\EXO2, plugins: List(<none>))) took 79.633269ms
[debug] [Loading] Done in C:\Users\unknow\Downloads\EXO2, returning: (exo2)
[debug]     Load.loadUnit: loadedProjectsRaw took 5899.541212ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.202257ms
[debug]   Load.loadUnit(file:/C:/Users/unknow/Downloads/EXO2/, ...) took 17950.794877ms
[debug] Load.apply: load took 17953.524556ms
[debug] Load.apply: resolveProjects took 0.174016ms
[debug] Load.apply: finalTransforms took 52.464782ms
[debug] Load.apply: config.delegates took 0.899007ms
[debug] Load.apply: Def.make(settings)... took 240.028813ms
[debug] Load.apply: structureIndex took 102.393962ms
[debug] Load.apply: mkStreams took 0.005132ms
[info] set current project to exo2 (in build file:/C:/Users/unknow/Downloads/EXO2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57865 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57865, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to exo2 (in build file:/C:/Users/unknow/Downloads/EXO2/)
[debug] > Exec(idea-shell, None, None)
